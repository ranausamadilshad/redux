{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter;\n    },\n\n    increase() {},\n\n    showToggle() {}\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["E:/Udemy/Redux/redux/01-starting-project/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","showToggle","counterReducer","action","type","amount","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEAH,WAAW,CAAC;AACRI,EAAAA,IAAI,EAAE,SADE;AAERH,EAAAA,YAAY,EAAEA,YAFN;AAGRI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACL,OAAN;AACH,KAHK;;AAINM,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACL,OAAN;AACH,KANK;;AAONO,IAAAA,QAAQ,GAAG,CAAG,CAPR;;AAQNC,IAAAA,UAAU,GAAE,CAAE;;AARR;AAHF,CAAD,CAAX;;AAeA,MAAMC,cAAc,GAAG,YAAgC;AAAA,MAA/BJ,KAA+B,uEAAxBN,YAAwB;AAAA,MAAXW,MAAW;;AACnD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHX,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAACI,KAAK,CAACJ;AAFf,KAAP;AAIH;;AACD,MAAIS,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHX,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAACI,KAAK,CAACJ;AAFf,KAAP;AAKH;;AACC,MAAIS,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AACHX,MAAAA,OAAO,EAAGK,KAAK,CAACL,OAAN,GAAiBU,MAAM,CAACE,MAD/B;AAEHX,MAAAA,WAAW,EAACI,KAAK,CAACJ;AAFf,KAAP;AAKH;;AAED,MAAIS,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC1B,WAAO;AACHV,MAAAA,WAAW,EAAC,CAACI,KAAK,CAACJ,WADhB;AAEHD,MAAAA,OAAO,EAAGK,KAAK,CAACL;AAFb,KAAP;AAIH;;AAGD,SAAOK,KAAP;AACH,CA/BD;;AAmCA,MAAMQ,KAAK,GAAEhB,WAAW,CAACY,cAAD,CAAxB;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore } from \"redux\"\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = { counter: 0, showCounter: true }\r\n\r\ncreateSlice({\r\n    name: \"counter\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter\r\n        },\r\n        increase() { },\r\n        showToggle(){}\r\n    }\r\n})\r\n\r\nconst counterReducer = (state= initialState,action) => {\r\n    if (action.type === \"increment\") {\r\n        return {\r\n            counter: state.counter + 1,\r\n            showCounter:state.showCounter\r\n        }\r\n    }\r\n    if (action.type === \"decrement\") {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter:state.showCounter\r\n            \r\n        }\r\n    }\r\n      if (action.type === \"increase\") {\r\n        return {\r\n            counter : state.counter  + action.amount,\r\n            showCounter:state.showCounter\r\n\r\n        }\r\n    }\r\n\r\n    if (action.type === \"toggle\") {\r\n        return {\r\n            showCounter:!state.showCounter,\r\n            counter : state.counter \r\n        }\r\n    }\r\n\r\n\r\n    return state\r\n}\r\n\r\n\r\n\r\nconst store= createStore(counterReducer)\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}